// <auto-generated />
using System;
using FarmApplication.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FarmApplication.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FarmApplication.Model.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EquipmentCount")
                        .HasColumnType("int");

                    b.Property<string>("EquipmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("FarmApplication.Model.FarmResources", b =>
                {
                    b.Property<int>("ResourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResourceId"));

                    b.Property<int>("ResourceCount")
                        .HasColumnType("int");

                    b.Property<string>("ResourceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ResourceId");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("FarmApplication.Model.FarmTasks", b =>
                {
                    b.Property<int>("TaskID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskID"));

                    b.Property<int?>("EquipmentValuesId")
                        .HasColumnType("int");

                    b.Property<int?>("FieldValuesFieldID")
                        .HasColumnType("int");

                    b.Property<int?>("ResourcesValuesResourceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TaskEnd")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TaskEquipment")
                        .HasColumnType("int");

                    b.Property<int?>("TaskEquipmentCount")
                        .HasColumnType("int");

                    b.Property<int?>("TaskField")
                        .HasColumnType("int");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TaskResourceCount")
                        .HasColumnType("int");

                    b.Property<int?>("TaskResources")
                        .HasColumnType("int");

                    b.Property<DateTime>("TaskStart")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TaskWorker")
                        .HasColumnType("int");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WorkersValuesWorkerID")
                        .HasColumnType("int");

                    b.HasKey("TaskID");

                    b.HasIndex("EquipmentValuesId");

                    b.HasIndex("FieldValuesFieldID");

                    b.HasIndex("ResourcesValuesResourceId");

                    b.HasIndex("WorkersValuesWorkerID");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("FarmApplication.Model.Field", b =>
                {
                    b.Property<int>("FieldID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FieldID"));

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FieldSize")
                        .HasColumnType("int");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FieldID");

                    b.ToTable("Fields");
                });

            modelBuilder.Entity("FarmApplication.Model.Workers", b =>
                {
                    b.Property<int>("WorkerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkerID"));

                    b.Property<DateTime>("EmployedUntil")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkerSalary")
                        .HasColumnType("int");

                    b.HasKey("WorkerID");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("FarmApplication.Model.FarmTasks", b =>
                {
                    b.HasOne("FarmApplication.Model.Equipment", "EquipmentValues")
                        .WithMany()
                        .HasForeignKey("EquipmentValuesId");

                    b.HasOne("FarmApplication.Model.Field", "FieldValues")
                        .WithMany()
                        .HasForeignKey("FieldValuesFieldID");

                    b.HasOne("FarmApplication.Model.FarmResources", "ResourcesValues")
                        .WithMany()
                        .HasForeignKey("ResourcesValuesResourceId");

                    b.HasOne("FarmApplication.Model.Workers", "WorkersValues")
                        .WithMany()
                        .HasForeignKey("WorkersValuesWorkerID");

                    b.Navigation("EquipmentValues");

                    b.Navigation("FieldValues");

                    b.Navigation("ResourcesValues");

                    b.Navigation("WorkersValues");
                });
#pragma warning restore 612, 618
        }
    }
}
